from dataclasses import dataclass

from ..core.program import Program

ATTENTION_SOURCES: tuple[str, ...]

def attention_block() -> Program: ...

TRANSFORMER_SOURCES: tuple[str, ...]

def transformer_encoder() -> Program: ...
@dataclass(frozen=True)
class _GNNSpec:
    num_layers: int
    feature_name: str = ...
    adjacency_name: str = ...
    message_prefix: str = ...
    agg_prefix: str = ...
    self_prefix: str = ...
    def required_sources(self) -> tuple[str, ...]: ...
    def build_equations(self) -> str: ...

def graph_message_passing(num_layers: int = 2) -> Program: ...
def graph_message_passing_sources(num_layers: int = 2) -> tuple[str, ...]: ...
