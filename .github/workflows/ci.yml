name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  lint-test:
    name: Lint & Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    continue-on-error: ${{ matrix.python-version == '3.13' }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: ${{ matrix.python-version == '3.13' }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Ruff lint
        run: ruff check src tests

      - name: Mypy (strict)
        run: mypy --strict src

      - name: Pytest with coverage
        run: pytest -q --cov=src --cov-report=xml

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.12'
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  optional-backends:
    name: Optional Backends (${{ matrix.backend }})
    runs-on: ubuntu-latest
    needs: lint-test
    strategy:
      fail-fast: false
      matrix:
        backend: ["torch", "jax"]
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          if [ "${{ matrix.backend }}" = "torch" ]; then pip install -e ".[torch]"; fi
          if [ "${{ matrix.backend }}" = "jax" ]; then pip install -e ".[jax]"; fi

      - name: Pytest (optional backends)
        run: pytest -q

  build-wheels:
    name: Build Wheels
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          pip install build cibuildwheel==2.16.5

      - name: Build sdist
        run: python -m build --sdist --outdir dist

      - name: Build wheels
        env:
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-*"
          CIBW_SKIP: "pp*"
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest -q
        run: cibuildwheel --output-dir wheelhouse

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: |
            dist/*.tar.gz
            wheelhouse/*.whl
